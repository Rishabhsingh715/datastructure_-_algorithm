//We go step by step and change next and the previous pointers;


/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseList(ListNode head) {
        ListNode prev = null;
        ListNode current = head;
        ListNode nexta = null;
        
         while (current != null) { 
            nexta = current.next; //make nexta value point to current.next;
            current.next = prev; //change pointer from next to previous.
            prev = current; //change previous to current for next iteration.
            current = nexta; // change next node to current for next iteration.
        } 
        head = prev; 
        return head; 
        
    }
}